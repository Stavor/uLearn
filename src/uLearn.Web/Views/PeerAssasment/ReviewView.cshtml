@using uLearn.Web.Models.PeerAssasmentModels
@using uLearn.Web.Views.PeerAssasment
@model uLearn.Web.Models.PeerAssasmentModels.ReviewModel
@{
    var param = new { courseId = ViewBag.CourseId, peerAssasmentId = ViewBag.PeerAssasmentId };
    var updateTargetId = "reviewId";
    var reloadReview = "reloadReview";
    var submit = new PostActionButtonModel
    {
        PostUrl = Url.Action("SubmitReview", "PeerAssasment", param),
        UpdateTargetId = updateTargetId,
        OnSuccess = reloadReview,
        Text = "SUBMIT"
    };
    var save = new PostActionButtonModel
    {
        PostUrl = Url.Action("SaveReview", "PeerAssasment", param),
        UpdateTargetId = updateTargetId,
        OnSuccess = reloadReview,
        Text = "SAVE"
    };
    var len = Model.Marks.MaxMark - Model.Marks.MinMark + 1;
    var items = new SelectListItem[len];
    for (var i = 0; i < len; i++)
    {
        var current = (Model.Marks.MinMark + i).ToString();
        items[i] = new SelectListItem
        {
            Text = current,
            Selected = current == Model.Marks.Mark,
            Value = current
        };
    }
}

<div id="@save.UpdateTargetId">
    <p>Тезис:</p>
    <span id="other-proposition">@Html.Raw(Model.TextForReview)</span>
    <p>Ревью:</p>
    @using (Html.BeginForm())
    {
        @Html.TextAreaFor(model => model.Text, new Dictionary<string, object>
        {
            { "id", "review-text" },
            { "class", "markdown-input" }
        })
        <p>Оцените:</p>
        @Html.Raw(Model.Marks.Criterion)
        @Html.Raw(Model.Marks.Mark)
        @Html.TextBoxFor(x => x.Marks.Criterion, new { hidden = true })
        @Html.DropDownListFor(x => x.Marks.Mark, items)
        @Html.PostActionButtonFor(save)
        @Html.PostActionButtonFor(submit)
    }
</div>