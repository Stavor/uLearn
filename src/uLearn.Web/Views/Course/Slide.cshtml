@using uLearn
@using uLearn.PeerAssasments
@model CoursePageModel

@{
	ViewBag.Title = Model.CourseTitle;
	ViewBag.Slide = Model.Slide;
}

@Html.Action("TableOfContents", "SlideNavigation", new { courseId = Model.CourseId, slideIndex = Model.Slide.Index })

<div class="slide-container">
	<div class="container body-content">
		<div class="row">
			<div class='slide'>
				<h1>@Model.Slide.Title</h1>
				@if (Model.Slide is QuizSlide)
				{
					@Html.Action("Quiz", "Quiz", new { slide = Model.Slide as QuizSlide, courseId = Model.CourseId, userId = Model.UserId })
				}
				@Html.DisplayFor(m => m.Slide.Blocks)
				@if (Model.Slide is ExerciseSlide)
				{
					@Html.Partial("_SolutionControl", Model)
				}
                @if (Model.Slide is PeerAssasmentSlide)
                {
                    var peerAssasment = (Model.Slide as PeerAssasmentSlide).PeerAssasment;
                    @Html.Action("Run", "PeerAssasment", new { courseId = Model.CourseId, peerAssasment })
                }
				@Html.Partial("_AskBar")
			</div>
			@Html.Partial("_RatesBar")
			@Html.Action("PrevNextButtons", "SlideNavigation", new { courseId = Model.CourseId, slideIndex = Model.Slide.Index, onSolutionsSlide = false })
		</div>
	</div>
</div>
@if (Model.IsFirstCourseVisit)
{	
	@Html.Action("SelectGroup")
}
@section scripts{
	@Scripts.Render("~/slide-js")
	<script>
		fillRate('@Model.Rate');
		$("#selectGroupModal").modal();
	</script>
	@if (Model.Slide is ExerciseSlide)
	{
		var e = (ExerciseSlide) Model.Slide;
		<script> getHints("@Model.CourseId", "@Model.Slide.Index", '@e.HintsMd.Count') </script>
		<script> refreshPreviousDraft('@(Model.LatestAcceptedSolution != null)', '@e.Id') </script>
	}
}

